[gd_scene load_steps=6 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform sampler2D n;
uniform float input_event;
uniform sampler2D png;
void fragment() {
	
	float PI = 3.1415926;
	float time_input_event = TIME * input_event;
	float wave_count = 1.0 * PI;
	float displace_x = sin(time_input_event + SCREEN_UV.y * wave_count);
	float displace_y = sin(time_input_event + SCREEN_UV.x * wave_count);
	
	vec2 offset = vec2(displace_x, displace_y);
	
	
	
	
	float time_factor = TIME * input_event;
	float factor = step(texture(n, SCREEN_UV + offset * mod(time_factor, 1.0)).r, 0.456);

	if (factor == 1.0){
		COLOR = vec4(sin(time_factor), cos(time_factor), asin(time_factor), 0.6);
		
		COLOR = vec4(texture(png, SCREEN_UV * 3.0).rgb, 0.6);
		COLOR = texture(png, mod(UV * 10.0 + TIME *0.01 *10000.0, vec2(1.0)));
		COLOR.a = 1.0;
		
		
	}
	else{
		COLOR.a = 0.0;
	}
}"

[sub_resource type="OpenSimplexNoise" id=7]

[sub_resource type="NoiseTexture" id=8]
noise = SubResource( 7 )

[sub_resource type="ShaderMaterial" id=6]
shader = SubResource( 5 )
shader_param/input_event = null
shader_param/n = SubResource( 8 )
shader_param/png = ExtResource( 1 )

[node name="ColorRect" type="ColorRect"]
material = SubResource( 6 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
